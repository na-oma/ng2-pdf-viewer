{"version":3,"sources":["../../src/app/app.component.ts"],"names":[],"mappings":";;AAGA,sCAA0C;AAI1C;IAyBE;QAvBA,WAAM,GAAW,gBAAgB,CAAC;QAYlC,SAAI,GAAW,CAAC,CAAC;QACjB,aAAQ,GAAW,CAAC,CAAC;QACrB,SAAI,GAAW,GAAG,CAAC;QACnB,iBAAY,GAAY,KAAK,CAAC;QAE9B,eAAU,GAAY,IAAI,CAAC;QAE3B,aAAQ,GAAY,KAAK,CAAC;QAC1B,gBAAW,GAAG,KAAK,CAAC;QACpB,YAAO,GAAG,IAAI,CAAC;IAiBf,CAAC;IAED,oCAAa,GAAb,UAAc,MAAc;QAC1B,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;IACtB,CAAC;IAED,oCAAa,GAAb,UAAc,MAAc;QAC1B,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC;IACtB,CAAC;IAED,6BAAM,GAAN,UAAO,KAAa;QAClB,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;IACzB,CAAC;IAKD,qCAAc,GAAd;QAAA,iBAYC;QAXC,IAAI,IAAI,GAAQ,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;YACxC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAE9B,MAAM,CAAC,MAAM,GAAG,UAAC,CAAM;gBACrB,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAChC,CAAC,CAAC;YAEF,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAMD,wCAAiB,GAAjB,UAAkB,GAAqB;QACrC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAOD,8BAAO,GAAP,UAAQ,KAAU;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAMD,iCAAU,GAAV,UAAW,YAA6B;QACtC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,6BAAM,GAAN,UAAO,KAAa;QAClB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,gBAAgB;oBAC1B,WAAW,EAAE,sBAAsB;oBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;iBACnC,EAAG,EAAE;KACL,CAAC;IAEK,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,mBAAC;CAjHD,AAiHC,IAAA;AAjHY,oCAAY","file":"app.component.js","sourceRoot":"","sourcesContent":["/**\r\n * Created by vadimdez on 21/06/16.\r\n */\r\nimport { Component } from '@angular/core';\r\n\r\n\r\n\r\nexport class AppComponent {\r\n\r\n  pdfSrc: string = './pdf-test.pdf';\r\n\r\n  // or pass options as object\r\n  // pdfSrc: any = {\r\n  //   url: './pdf-test.pdf',\r\n  //   withCredentials: true,\r\n  //// httpHeaders: { // cross domain\r\n  ////   'Access-Control-Allow-Credentials': true\r\n  //// }\r\n  // };\r\n\r\n  error: any;\r\n  page: number = 1;\r\n  rotation: number = 0;\r\n  zoom: number = 1.0;\r\n  originalSize: boolean = false;\r\n  pdf: any;\r\n  renderText: boolean = true;\r\n  progressData: PDFProgressData;\r\n  isLoaded: boolean = false;\r\n  stickToPage = false;\r\n  showAll = true;\r\n\r\n  constructor() {\r\n    // Load pdf\r\n    // let xhr = new XMLHttpRequest();\r\n    // xhr.open('GET', 'http://localhost:8000/pdf-test.pdf', true);\r\n    // xhr.responseType = 'blob';\r\n    //\r\n    // xhr.onload = (e: any) => {\r\n    //   console.log(xhr);\r\n    //   if (xhr.status === 200) {\r\n    //     let blob = new Blob([xhr.response], {type: 'application/pdf'});\r\n    //     this.pdfSrc = URL.createObjectURL(blob);\r\n    //   }\r\n    // };\r\n    //\r\n    // xhr.send();\r\n  }\r\n\r\n  incrementPage(amount: number) {\r\n    this.page += amount;\r\n  }\r\n\r\n  incrementZoom(amount: number) {\r\n    this.zoom += amount;\r\n  }\r\n\r\n  rotate(angle: number) {\r\n    this.rotation += angle;\r\n  }\r\n\r\n  /**\r\n   * Render PDF preview on selecting file\r\n   */\r\n  onFileSelected() {\r\n    let $img: any = document.querySelector('#file');\r\n\r\n    if (typeof (FileReader) !== 'undefined') {\r\n      let reader = new FileReader();\r\n\r\n      reader.onload = (e: any) => {\r\n        this.pdfSrc = e.target.result;\r\n      };\r\n\r\n      reader.readAsArrayBuffer($img.files[0]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get pdf information after it's loaded\r\n   * @param pdf\r\n   */\r\n  afterLoadComplete(pdf: PDFDocumentProxy) {\r\n    this.pdf = pdf;\r\n    this.isLoaded = true;\r\n  }\r\n\r\n  /**\r\n   * Handle error callback\r\n   *\r\n   * @param error\r\n   */\r\n  onError(error: any) {\r\n    this.error = error; // set error\r\n  }\r\n\r\n  /**\r\n   * Pdf loading progress callback\r\n   * @param {PDFProgressData} progressData\r\n   */\r\n  onProgress(progressData: PDFProgressData) {\r\n    this.progressData = progressData;\r\n    this.isLoaded = false;\r\n    this.error = null; // clear error\r\n  }\r\n\r\n  getInt(value: number): number {\r\n    return Math.round(value);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  moduleId: module.id,\r\n  selector: 'pdf-viewer-app',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}